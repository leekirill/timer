{"mappings":"AAAA,MAAMA,EACJC,aAAYC,SAAEA,EAAQC,WAAEA,IACtBC,KAAKF,SAAWA,EAChBE,KAAKD,WAAaA,EAClBC,KAAKC,QACLD,KAAKE,YAAYF,KAAKG,kBAAkBJ,EAAaK,KAAKC,O,CAG5DH,aAAYI,KAAEA,EAAIC,MAAEA,EAAKC,KAAEA,EAAIC,KAAEA,IAC/B,MAAMC,EAAWC,SAASC,cAAcZ,KAAKF,UACvCe,EAASH,EAASE,cAAc,uBAChCE,EAAUJ,EAASE,cAAc,wBACjCG,EAASL,EAASE,cAAc,uBAChCI,EAASN,EAASE,cAAc,uBAEtCC,EAAOI,YAAcX,EACrBQ,EAAQG,YAAcV,EACtBQ,EAAOE,YAAcT,EACrBQ,EAAOC,YAAcR,C,CAGvBR,QACEiB,aAAY,KACV,MACMC,EADanB,KAAKD,WACOK,KAAKC,MAC9Be,EAAiBpB,KAAKG,kBAAkBgB,GAC9CnB,KAAKE,YAAYkB,EAAe,GAC/B,I,CAGLjB,kBAAkBkB,GAQhB,MAAO,C,KAPMrB,KAAKsB,IAAIC,KAAKC,MAAMH,EAAQ,Q,MAC3BrB,KAAKsB,IACjBC,KAAKC,MAAMH,EAAS,MAAyB,O,KAElCrB,KAAKsB,IAAIC,KAAKC,MAAMH,EAAS,KAAoB,M,KACjDrB,KAAKsB,IAAIC,KAAKC,MAAMH,EAAS,IAAc,M,CAI1DC,IAAIG,GACF,OAAOC,OAAOD,GAAOE,SAAS,EAAG,I,EAItB,IAAI/B,EAAe,CAChCE,SAAU,WACVC,WAAY,IAAIK,KAAK,oBAGR,IAAIR,EAAe,CAChCE,SAAU,WACVC,WAAY,IAAIK,KAAK,sBAGR,IAAIR,EAAe,CAChCE,SAAU,WACVC,WAAY,IAAIK,KAAK","sources":["src/plugin.js"],"sourcesContent":["class CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n    this.start();\n    this.updateTimer(this.getTimeComponents(targetDate - Date.now()));\n  }\n\n  updateTimer({ days, hours, mins, secs }) {\n    const timerDiv = document.querySelector(this.selector);\n    const daysEl = timerDiv.querySelector('[data-value=\"days\"]');\n    const hoursEl = timerDiv.querySelector('[data-value=\"hours\"]');\n    const minsEl = timerDiv.querySelector('[data-value=\"mins\"]');\n    const secsEl = timerDiv.querySelector('[data-value=\"secs\"]');\n\n    daysEl.textContent = days;\n    hoursEl.textContent = hours;\n    minsEl.textContent = mins;\n    secsEl.textContent = secs;\n  }\n\n  start() {\n    setInterval(() => {\n      const targetDate = this.targetDate;\n      const deltaTime = targetDate - Date.now();\n      const timeComponents = this.getTimeComponents(deltaTime);\n      this.updateTimer(timeComponents);\n    }, 1000);\n  }\n\n  getTimeComponents(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n  }\n  pad(value) {\n    return String(value).padStart(2, \"0\");\n  }\n}\n\nconst timer1 = new CountdownTimer({\n  selector: \"#timer-1\",\n  targetDate: new Date(\"Junary 2, 2024\"),\n});\n\nconst timer2 = new CountdownTimer({\n  selector: \"#timer-2\",\n  targetDate: new Date(\"October 16, 2022\"),\n});\n\nconst timer3 = new CountdownTimer({\n  selector: \"#timer-3\",\n  targetDate: new Date(\"Jan 1, 2023\"),\n});\n"],"names":["$f030692716f7b8a2$var$CountdownTimer","constructor","selector","targetDate","this","start","updateTimer","getTimeComponents","Date","now","days","hours","mins","secs","timerDiv","document","querySelector","daysEl","hoursEl","minsEl","secsEl","textContent","setInterval","deltaTime","timeComponents","time","pad","Math","floor","value","String","padStart"],"version":3,"file":"index.91ca31fe.js.map"}